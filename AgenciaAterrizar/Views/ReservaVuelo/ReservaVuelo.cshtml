@{
    ViewData["Title"] = "Finalizar Compra";
    var appUrl = Url.Content("~/");
    var modeloVueloJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
}

@model OfertaVueloApi

<link rel="stylesheet" href="~/css/reservaVuelo.css" asp-append-version="true" />

<div class="compraFinalizada" id="compraFinalizada" style="display: none;">
    <h3>¡¡GRACIAS POR TU COMPRA!!</h3>
    <p>Desde <b>AgenciaAterrizar</b> te deseamos un excelente viaje.</p>
    <button class="buttonHome" onclick="volverInicio()">Volver a la página principal</button>
</div>

<div class="divReserva" id="contenidoReserva" style="display: flex;">
    <div class="divTitulo">
        <h3 class="titulo">¡Estás a un solo paso de concretar tu viaje!</h3>

        <form class="mt-5 ps-2 pe-4 animate__animated animate__fadeIn form">
            <h5 class="tituloForm">Completá con los datos de los pasajeros:</h5>
            <div class="itemForm">
                @for (int i = 1; i <= Model.pasajeros; i++)
                {
                    <h6>Pasajero @(i)</h6>
                    <div class="d-flex justify-content-evenly">
                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="nombreCompleto_@(i)" class="form-label labelBuscador">Nombre completo: </label>
                            <input type="text" class="form-control" id="nombreCompleto_@(i)" name="Pasajeros[@i].NombreCompleto" aria-describedby="nombreHelp_@(i)" placeholder="Como aparece en tu documento de viaje">
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="nombreCompletoError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Complete el nombre completo.</span>
                        </div>
                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="apellido_@(i)" class="form-label labelBuscador">Apellido/s: </label>
                            <input type="text" class="form-control" id="apellido_@(i)" name="Pasajeros[@i].Apellido" placeholder="Como aparece en tu documento de viaje">
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="apellidoError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Complete con el apellido.</span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-evenly">
                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="pais_@(i)" class="form-label labelBuscador">País de Residencia: </label>
                            <select class="form-control" id="selectPaises_@(i)" name="Pasajeros[@i].Pais">
                                <option value="">Seleccione un país</option>
                            </select>
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="paisError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Seleccione país de residencia.</span>
                        </div>

                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="fechaNacimiento_@(i)" class="form-label labelBuscador">Fecha de Nacimiento: </label>
                            <input type="date" class="form-control" id="fechaNacimiento_@(i)" name="Pasajeros[@i].FechaNacimiento">
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="fechaNacimientoError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Elija la fecha de nacimiento.</span>
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="fechaNacimientoEdadError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> El titular de la reserva debe ser mayor de 18 años.</span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-evenly">
                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="tipoDocumento_@(i)" class="form-label labelBuscador">Tipo de Documento: </label>
                            <select class="form-control" id="tipoDocumento_@(i)" name="Pasajeros[@i].TipoDocumento">
                                <option value="pasaporte">Pasaporte</option>
                                <option value="dni">Documento Nacional de Identidad</option>
                                <option value="dniExtranjero">Documento Nacional Extranjero</option>
                                <option value="libretaCivica">Libreta Civica</option>
                                <option value="libretaEnrolamiento">Libreta de Enrolamiento</option>
                            </select>
                        </div>

                        <div class="mb-3 w-50 p-2 inputForm">
                            <label for="nroDocumento_@(i)" class="form-label labelBuscador">Número de Documento: </label>
                            <input type="text" class="form-control" id="nroDocumento_@(i)" name="Pasajeros[@i].NroDocumento">
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="nroDocumentoError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Complete con el número de documento.</span>
                            <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="lengthNroDocumentoError_@(i)"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Debe tener 8 caracteres.</span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-evenly align-items-center">
                        <div class="d-flex inputGenero">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="Pasajeros[@i].Genero" id="masculino_@(i)" value="masculino">
                                <label class="form-check-label" for="masculino_@(i)">
                                    Masculino
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="Pasajeros[@i].Genero" id="femenino_@(i)" value="femenino" checked>
                                <label class="form-check-label" for="femenino_@(i)">
                                    Femenino
                                </label>
                            </div>
                        </div>
                    </div>
                <hr class="ultimoHr">
                }
            </div>

            <div class="mb-3">
                <label for="email" class="form-label labelBuscador">Email para el envío del voucher: </label>
                <input type="email" class="form-control" id="email" aria-describedby="emailHelp">
                <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="emailError"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Ingrese el email de la reserva.</span>
            </div>

            <div class="d-flex justify-content-evenly medioPago">
                <div class="mb-3 w-50 p-2 inputForm">
                    <label for="medioPago" class="form-label labelBuscador">Medio de Pago: </label>
                    <select class="form-control" id="medioPago" name="medioPago">
                        <option value="credito">Tarjeta de Crédito</option>
                        <option value="debito">Tarjeta de Débito</option>
                    </select>
                </div>

                <div class="mb-3 w-50 p-2 inputForm">
                    <label for="nroTarjeta" class="form-label labelBuscador">Número de Tarjeta: </label>
                    <input type="number" class="form-control" id="nroTarjeta" name="nroTarjeta">
                    <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="nroTarjetaError"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Ingrese el nro de tarjeta.</span>
                    <span class="spanError animate__animated animate__fadeIn" style="display: none;" id="lengthNroTarjetaError"><i class="fa-solid fa-circle-exclamation errorIcon"></i> Deber tener 16 caracteres.</span>
                </div>
            </div>
            
            <div class="d-flex justify-content-center"> 
                <button class="btn" id="finalizarCompra">
                    <span class="icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="24" fill="currentColor" class="bi bi-airplane-fill" viewBox="0 0 16 16">
                            <path d="M6.428 1.151C6.708.591 7.213 0 8 0s1.292.592 1.572 1.151C9.861 1.73 10 2.431 10 3v3.691l5.17 2.585a1.5 1.5 0 0 1 .83 1.342V12a.5.5 0 0 1-.582.493l-5.507-.918-.375 2.253 1.318 1.318A.5.5 0 0 1 10.5 16h-5a.5.5 0 0 1-.354-.854l1.319-1.318-.376-2.253-5.507.918A.5.5 0 0 1 0 12v-1.382a1.5 1.5 0 0 1 .83-1.342L6 6.691V3c0-.568.14-1.271.428-1.849Z"></path>
                        </svg>
                    </span>
                    <span class="text">Reservar Vuelo</span>
                </button>
            </div>

        </form>
    </div>


    <div class="cardReserva">
        <div class="img">

        </div>

        <div class="text">
            <div>
                <p class="h3 mb-4"> Detalle de la reserva </p>
                <p class="p">Volás con: <b>@Model.nombreAerolinea</b></p>

                <p class="p"><b>Pasajeros:</b> @Model.pasajeros.</p>
            </div>

            <div>

                <p class="p"><i class="fa-solid fa-plane-departure"></i> <b>IDA:</b> @Model.escalasIda[0].departureAirport.ciudad - @Model.escalasIda[@Model.cantEscalasIda].arrivalAirport.ciudad </p>
                <div class="container divVuelo">
                        <p class="p m-2"><b>Salida: </b> @Model.escalasIda[0].fechaDepartureFormateada hs.</p>
                        <p class="p m-2"><b>Llegada: </b>@Model.escalasIda[@Model.cantEscalasIda].fechaArrivalFormateada hs.</p>
                        @if(@Model.cantEscalasIda == 0){
                            <p class="p m-2"><b>Escalas:</b> Directo.</p>
                        }else{
                            <p class="p m-2"><b>Escalas:</b> @Model.cantEscalasIda</p>
                        }
                        @if(@Model.equipaje == 0){
                            <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Solo bolso de mano.</p>
                        }
                        @if(@Model.equipaje == 1){
                            <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Bolso de mano y Carry On.</p>
                        }
                        @if(@Model.equipaje > 1){
                            <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Bolso de mano , Carry On y Equipaje de 23kg.</p>
                        }

                        <p class="p m-2"><i class="fa-regular fa-clock"></i> @Model.intinerario[0].durationFormateada</p>
                    </div>

                    @if(@Model.idaYvuelta == true){
                    <div class="mt-4">
                        <p class="p"><i class="fa-solid fa-plane-arrival"></i><b> VUELTA:</b>  @Model.escalasVuelta[0].departureAirport.ciudad - @Model.escalasVuelta[@Model.cantEscalasVuelta].arrivalAirport.ciudad </p>
                        
                        <div class="container divVuelo">
                            <p class="p m-2"><b>Salida: </b> @Model.escalasVuelta[0].fechaDepartureFormateada hs. </p>
                            <p class="p m-2"><b>Llegada:</b> @Model.escalasVuelta[@Model.cantEscalasVuelta].fechaArrivalFormateada hs. </p>
                            @if(@Model.cantEscalasVuelta == 0){
                            <p class="p m-2"><b>Escalas:</b> Directo.</p>
                            }else{
                                <p class="p m-2"><b>Escalas:</b> @Model.cantEscalasVuelta</p>
                            }
                            @if(@Model.equipaje == 0){
                                <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Solo bolso de mano.</p>
                            }
                            @if(@Model.equipaje == 1){
                                <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Bolso de mano y Carry On.</p>
                            }
                            @if(@Model.equipaje > 1){
                                <p class="p m-2"><i class="fa-solid fa-bag-shopping"></i> Bolso de mano , Carry On y Equipaje de 23kg.</p>
                            }
                            <p class="p m-2"><i class="fa-regular fa-clock"></i> @Model.intinerario[1].durationFormateada</p>
                        </div>
                    </div>
                }

                <div class="text-center mt-4 precioCompra">
                    <span class="p"><b>Precio:</b> $ @Model.precio.total</span>
                </div>

                    
                </div>
            </div>

            <div class="icon-box">
                <svg version="1.1" class="svg" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512.001 512.001" style="enable-background:new 0 0 512.001 512.001;" xml:space="preserve">
                    <g>
                        <path style="fill:#3D6687;" d="M165,68.715l-26.327-26.327l37.363-37.363c3.739-3.739,9.801-3.739,13.54,0l12.786,12.786
                            c3.739,3.739,3.739,9.801,0,13.54L165,68.715z"></path>
                        <path style="fill:#3D6687;" d="M234.998,101.725l-26.327-26.327l37.363-37.363c3.739-3.739,9.801-3.739,13.54,0l12.786,12.786
                            c3.739,3.739,3.739,9.801,0,13.54L234.998,101.725z"></path>
                        <path style="fill:#3D6687;" d="M445.507,349.222l26.327,26.327l37.363-37.363c3.739-3.739,3.739-9.801,0-13.54l-12.787-12.787
                            c-3.739-3.739-9.801-3.739-13.54,0L445.507,349.222z"></path>
                        <path style="fill:#3D6687;" d="M408.054,279.224l26.327,26.327l37.363-37.363c3.739-3.739,3.739-9.801,0-13.54l-12.786-12.786
                            c-3.739-3.739-9.801-3.739-13.54,0L408.054,279.224z"></path>
                    </g>
                    <g>
                        <path style="fill:#CCDFED;" d="M443.378,458.836L276.261,234.948L52.372,67.83c-7.845-5.856-8.673-17.309-1.75-24.232
                            l22.953-22.954c10.277-10.277,25.733-13.35,39.158-7.785l272.626,112.989l112.989,272.626c5.564,13.427,2.491,28.882-7.785,39.158
                            l-22.953,22.953C460.688,467.51,449.234,466.683,443.378,458.836z"></path>
                        <path style="fill:#CCDFED;" d="M181.785,507.029L104.93,404.848L2.75,327.993c-3.349-2.518-3.694-7.418-0.73-10.381l11.782-11.782
                            c7.939-7.939,19.965-10.129,30.193-5.499l113.895,51.558l51.558,113.895c4.63,10.228,2.439,22.254-5.499,30.193l-11.783,11.782
                            C189.203,510.722,184.303,510.378,181.785,507.029z"></path>
                    </g>
                    <g>
                        <path style="fill:#BAD5E5;" d="M209.448,465.784l-17.656-39.003l0,0L180.8,437.772c-9.575,9.575-25.407,8.461-33.546-2.361
                            l-31.288-41.599l-0.098,0.097L7.359,312.273l0,0l-5.34,5.34c-2.963,2.963-2.618,7.862,0.73,10.381l102.181,76.855l76.855,102.181
                            c2.518,3.349,7.418,3.694,10.381,0.73l11.783-11.783C211.887,488.038,214.078,476.012,209.448,465.784z"></path>
                        <path style="fill:#BAD5E5;" d="M497.749,427.311c0.462-0.999,0.894-2.01,1.261-3.045c0.754-2.12,1.283-4.309,1.628-6.528
                            c0.991-6.38,0.291-13.038-2.289-19.265l-16.424-39.63l-1.043-2.517c-0.973,7.762-4.471,15.169-10.243,20.941l-22.953,22.953
                            c-6.923,6.923-18.375,6.096-24.232-1.75L290.651,220.557L52.357,41.862l-1.735,1.735c-4.549,4.549-5.73,11.047-3.795,16.634
                            c1.01,2.917,2.855,5.589,5.545,7.597l145.464,108.579l78.425,58.539l58.539,78.425l108.579,145.464
                            c2.008,2.691,4.681,4.535,7.597,5.545c5.587,1.935,12.086,0.754,16.635-3.795l22.953-22.953
                            C493.61,434.588,496.005,431.079,497.749,427.311z"></path>
                    </g>
                    <path style="fill:#61AFF6;" d="M104.914,432.283L104.914,432.283c-17.494,8.348-35.767-9.925-27.419-27.419l0,0
                        c18.554-38.883,42.253-75.095,70.46-107.661L341.791,73.417c28.676-33.108,69.054-53.832,112.672-57.831l11.885-1.089
                        c16.568-1.519,30.453,12.365,28.935,28.934l-1.089,11.885c-3.999,43.617-24.724,83.995-57.831,112.672L212.576,361.824
                        C180.009,390.03,143.799,413.73,104.914,432.283z"></path>
                    <path style="fill:#399AEA;" d="M494.193,55.316l1.089-11.885c1.519-16.568-12.366-30.453-28.935-28.934l-11.885,1.089
                        c-0.155,0.014-0.309,0.034-0.464,0.048c-4.103,43.439-24.793,83.633-57.783,112.208L81.614,428.357
                        c5.715,5.643,14.603,8.077,23.3,3.926l0,0c38.883-18.553,75.095-42.253,107.661-70.459l223.786-193.836
                        C469.469,139.311,490.194,98.934,494.193,55.316z"></path>
                    <path style="fill:#FFFFFF;" d="M400.892,56.26c-4.215-0.36-7.923,2.765-8.285,6.978c-0.36,4.214,2.765,7.924,6.978,8.285
                        c22.969,1.966,36.702,15.7,38.667,38.667c0.161,1.871,0.981,3.528,2.213,4.76c1.542,1.542,3.729,2.418,6.071,2.218
                        c4.215-0.361,7.339-4.07,6.978-8.285C450.92,78.531,431.246,58.856,400.892,56.26z"></path>
                    <path style="fill:#CCDFED;" d="M446.539,117.17c4.215-0.361,7.339-4.07,6.978-8.285c-1.271-14.849-6.637-27.132-15.331-36.121
                        c-2.36,4.942-4.957,9.768-7.785,14.46c4.392,6.071,7.067,13.778,7.853,22.967c0.161,1.871,0.981,3.528,2.213,4.76
                        C442.01,116.493,444.197,117.371,446.539,117.17z"></path>
                </svg>
                
                <p class="span">¡Excelente elección!</p>
            </div>
        </div>
    </div>

</div>

<div id="voucherPDF" style="display: none;" class="flex-column">
    <h1 class="tituloPDF"><i class="fa-solid fa-plane"></i> AgenciaAterrizar - Voucher de tu reserva</h1>

    <div class="d-flex divIdReserva">
        <div>
            <p>Nro de e-Voucher: <span id="nroVoucherPDF"></span></p>
        </div>
        <div>
            <p>Email de la reserva: <span id="emailPDF"></span></p>
        </div>
    </div>

    <div class="detalleReservaPDF">
        <h5>Detalle de tu reserva:</h5>
        <div>
            @if(@Model.escalasVuelta.Count > 0)
            {
                <div class="escalasPDF">
                    <div>
                        <p><b>Vuelo de Ida:</b> @Model.escalasIda[0].departureAirport.ciudad - @Model.escalasIda[@Model.cantEscalasIda].arrivalAirport.ciudad</p>
                        <div>
                            <ul id="escalasIdaPDF"></ul>
                        </div>
                    </div>

                    <div>
                        <p><b>Vuelo de Regreso</b>: @Model.escalasVuelta[0].departureAirport.ciudad - @Model.escalasVuelta[@Model.cantEscalasVuelta].arrivalAirport.ciudad</p>
                        <div>
                            <ul id="escalasVueltaPDF"></ul>
                        </div>
                    </div>
                </div>
            }else{
                <div class="escalasPDF">
                    <div>
                        <p><b>Vuelo:</b> @Model.escalasIda[0].departureAirport.ciudad - @Model.escalasIda[@Model.cantEscalasIda].arrivalAirport.ciudad</p>
                        <div>
                            <ul id="escalasIdaPDF"></ul>
                        </div>
                    </div>
                </div>
            }
            <div class="d-flex justify-content-center pasajerosPDF">
                <div class="mt-2">
                    <p>@Model.pasajeros pasajero/s </p>
                </div>
                <div class="equipajePDF">
                    @if(@Model.equipaje == 0){
                        <p class="m-2"><i class="fa-solid fa-bag-shopping"></i> Incluye: Solo bolso de mano.</p>
                    }
                    @if(@Model.equipaje == 1){
                        <p class="m-2"><i class="fa-solid fa-bag-shopping"></i> Incluye: Bolso de mano y Carry On.</p>
                    }
                    @if(@Model.equipaje > 1){
                        <p class="m-2"><i class="fa-solid fa-bag-shopping"></i> Incluye: Bolso de mano , Carry On y Equipaje de 23kg.</p>
                    }
                </div>
            </div>

            <div>
                <h6>Pasajeros: </h6>
                <div class="d-flex justify-content-center" id="pasajerosPDF"></div>
            </div>

            <div>
                <h6>Método de Pago: </h6>
                <div id="pagoPDF"></div>
            </div>
        </div>

    </div>
</div>

@section Scripts{
    <script src="~/js/reservaVuelo.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
        //Genero la variable para obtener la ruta relativa de la aplicación y no tener inconveniente para utilizar el controlador.
        var appUrl = "@appUrl";
    </script>
    <script>

        document.addEventListener('DOMContentLoaded', () => {
            for (let i = 1; i <= @Model.pasajeros; i++) {
                
                let tipoDocumento = document.getElementById('tipoDocumento_' + i);
                let nroDocumento = document.getElementById('nroDocumento_' + i);

                // Escucha el evento de cambio para actualizar el tipo de input cuando el usuario cambie el tipo de documento.
                tipoDocumento.addEventListener('change', cambiarTypeNroDocumento);

                // Llama a la función inmediatamente para ajustar el tipo de input según el valor actual
                cambiarTypeNroDocumento();

                // Función para cambiar el tipo de input según el tipo de documento seleccionado
                function cambiarTypeNroDocumento() {
                    if (tipoDocumento.value === 'pasaporte') {
                        nroDocumento.setAttribute('type', 'text');
                    } else {
                        nroDocumento.setAttribute('type', 'number');
                    }
                }
            }
            
        });

            document.getElementById('finalizarCompra').addEventListener('click', function(e) {
                e.preventDefault();

                // Corrobora que no existan campos incompletos
                var erroresInput = 0;

                for(var i = 1; i <= @Model.pasajeros; i++)
                {
                    if(i == 1){
                        document.getElementById('fechaNacimientoEdadError_1').style.display = 'none';
                        var fechaNacimiento = new Date(document.getElementById('fechaNacimiento_1').value);
                        var hoy = new Date();

                        var edad = hoy.getFullYear() - fechaNacimiento.getFullYear();
                        var mes = hoy.getMonth() - fechaNacimiento.getMonth();

                        if(mes < 0 || (mes === 0 && hoy.getDate() < fechaNacimiento.getDate())){
                            edad--;
                        }

                        if(edad < 18){
                            document.getElementById('fechaNacimientoEdadError_1').style.display = 'block';
                            erroresInput++;
                        }
                    }

                    document.getElementById('nombreCompletoError_'+i).style.display = 'none';
                    var nombre = document.getElementById('nombreCompleto_'+i).value;
                    if(nombre == ''){
                        document.getElementById('nombreCompletoError_'+i).style.display = 'block';
                        erroresInput++;
                    }

                    document.getElementById('apellidoError_'+i).style.display = 'none';
                    var apellido = document.getElementById('apellido_'+i).value;
                    if(apellido == ''){
                        document.getElementById('apellidoError_'+i).style.display = 'block';
                        erroresInput++;
                    }

                    document.getElementById('paisError_'+i).style.display = 'none';
                    var pais = document.getElementById('selectPaises_'+i).value;
                    if(pais == ''){
                        document.getElementById('paisError_'+i).style.display = 'block';
                        erroresInput++;
                    }

                    document.getElementById('fechaNacimientoError_'+i).style.display = 'none';
                    var fechaNacimiento = document.getElementById('fechaNacimiento_'+i).value;
                    if(fechaNacimiento == ''){
                        document.getElementById('fechaNacimientoError_'+i).style.display = 'block';
                        erroresInput++;
                    }

                    document.getElementById('nroDocumentoError_'+i).style.display = 'none';
                    var nroDocumento = document.getElementById('nroDocumento_'+i).value;
                    if(nroDocumento == ''){
                        document.getElementById('nroDocumentoError_'+i).style.display = 'block';
                        erroresInput++;
                    }

                    document.getElementById('lengthNroDocumentoError_'+i).style.display = 'none';
                    var legthNroDocumento = document.getElementById('nroDocumento_'+i).value;
                    if(legthNroDocumento.length != 8){
                        document.getElementById('lengthNroDocumentoError_'+i).style.display = 'block';
                        erroresInput++;
                    }
                }

                document.getElementById('emailError').style.display = 'none';
                var email = document.getElementById('email').value;
                if(email == ''){
                    document.getElementById('emailError').style.display = 'block';
                    erroresInput++;
                }

                document.getElementById('nroTarjetaError').style.display = 'none';
                var nroTarjeta = document.getElementById('nroTarjeta').value;
                if(nroTarjeta == ''){
                    document.getElementById('nroTarjetaError').style.display = 'block';
                    erroresInput++;
                }

                document.getElementById('lengthNroTarjetaError').style.display = 'none';
                var lengthNroTarjeta = document.getElementById('nroTarjeta').value;
                if(lengthNroTarjeta.length != 16){
                    document.getElementById('lengthNroTarjetaError').style.display = 'block';
                    erroresInput++;
                }

                if(erroresInput > 0){
                    return;
                }

                //Obtengo del modelo que paso al HTML un objeto JSON para poder utilizarlo en un script de JS.
                var modeloVuelo = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

                //Verifico si se trata de un vuelo ida y vuelta o solo ida para asignar los aeropuertos de vuelta si existen.
                var aeropuertoDestinoID;
                var nombreAeropuertoDestino;

                if (modeloVuelo.intinerario[0].segments.length > 1) {
                    aeropuertoDestinoID = modeloVuelo.escalasIda[modeloVuelo.escalasIda.length - 1].arrival;
                    nombreAeropuertoDestino = modeloVuelo.escalasIda[modeloVuelo.escalasIda.length - 1].arrivalAirport.nombre;
                } else {
                    aeropuertoDestinoID = modeloVuelo.escalasIda[0].arrival;
                    nombreAeropuertoDestino = modeloVuelo.escalasIda[0].arrivalAirport.nombre;
                }

                function generarNroVoucher() {
                    const timestamp = Date.now(); // Obtiene la marca de tiempo actual en milisegundos
                    const numAleatorio = Math.floor(Math.random() * 1000000); // Genera un número aleatorio entre 0 y 999999
                    return timestamp.toString() + numAleatorio.toString(); // Combina ambos en una cadena de números
                }
                var nroVoucher = generarNroVoucher();

                //Genero el objeto que voy a pasar el controlador.
                var reservaVuelo = {
                    NroVoucher: nroVoucher,
                    AeropuertoOrigenID: modeloVuelo.escalasIda[0].departure,
                    NombreAeropuertoOrigen: modeloVuelo.escalasIda[0].departureAirport.nombre,
                    FechaSalida: modeloVuelo.escalasIda[0].departureDate,
                    AerolineaID: modeloVuelo.codigoAerolinea,
                    AerolineaNombre: modeloVuelo.nombreAerolinea,
                    DuracionVueloIda: modeloVuelo.intinerario[0].duration,
                    CantidadPasajeros: modeloVuelo.pasajeros,
                    Email: document.getElementById('email').value,
                    MedioDePago: document.getElementById('medioPago').value,
                    NroTarjeta: document.getElementById('nroTarjeta').value,
                    CantidadCuotas: 1,
                    MontoTotalCompra: modeloVuelo.precio.total,
                    AeropuertoDestinoID: aeropuertoDestinoID,
                    NombreAeropuertoDestino: nombreAeropuertoDestino
                }

                //Creo las escalas del vuelo seleccionado para agregarlas al objeto que paso al controlador.
                var escalas = [];
                var escalasIdaHTMLPDF = ``;
                for(var i = 0; i < modeloVuelo.escalasIda.length; i++)
                {
                    var escala = {
                        AerolineaID: modeloVuelo.escalasIda[i].airline,
                        AeropuertoDestinoID: modeloVuelo.escalasIda[i].arrival,
                        FechaLlegada: modeloVuelo.escalasIda[i].arrivalDate,
                        AeropuertoOrigenID: modeloVuelo.escalasIda[i].departure,
                        FechaSalida: modeloVuelo.escalasIda[i].departureDate,
                        EscalaIda: modeloVuelo.escalasIda[i].ida,
                        EscalaVuelta: modeloVuelo.escalasIda[i].vuelta,
                        NroEscala: modeloVuelo.escalasIda[i].escalaNumber,
                        DuracionVuelo: modeloVuelo.escalasIda[i].duration,
                        NumeroVuelo: modeloVuelo.escalasIda[i].fligthNumber
                    }

                    escalasIdaHTMLPDF += `
                        <li><b>Tramo ${i + 1} con ${escala.AerolineaID}</b>: Partida: ${formatoFechaMostrar(escala.FechaSalida)} desde ${escala.AeropuertoOrigenID} a las ${formatoFechaSinFechaMostrar(escala.FechaSalida)}hs.  - Arrivo: ${formatoFechaMostrar(escala.FechaLlegada)} - a ${escala.AeropuertoDestinoID} a las ${formatoFechaSinFechaMostrar(escala.FechaLlegada)}hs. - <b>Vuelo Nro</b>: ${escala.AerolineaID}${escala.NumeroVuelo} </li>
                    `

                    escalas.push(escala);
                }

                var escalasVueltaHTMLPDF = ``;
                if( modeloVuelo.escalasVuelta.length > 0)
                {
                    reservaVuelo.FechaRegreso = modeloVuelo.escalasVuelta[0].departureDate;
                    reservaVuelo.DuracionVueloRegreso = modeloVuelo.intinerario[1].duration;

                    for(var i = 0; i < modeloVuelo.escalasVuelta.length; i++)
                    {
                        var escala = {
                            AerolineaID: modeloVuelo.escalasVuelta[i].airline,
                            AeropuertoDestinoID: modeloVuelo.escalasVuelta[i].arrival,
                            FechaLlegada: modeloVuelo.escalasVuelta[i].arrivalDate,
                            AeropuertoOrigenID: modeloVuelo.escalasVuelta[i].departure,
                            FechaSalida: modeloVuelo.escalasVuelta[i].departureDate,
                            EscalaIda: modeloVuelo.escalasVuelta[i].ida,
                            EscalaVuelta: modeloVuelo.escalasVuelta[i].vuelta,
                            NroEscala: modeloVuelo.escalasVuelta[i].escalaNumber,
                            DuracionVuelo: modeloVuelo.escalasVuelta[i].duration,
                            NumeroVuelo: modeloVuelo.escalasVuelta[i].fligthNumber
                        }

                        escalasVueltaHTMLPDF += `
                            <li><b>Tramo ${i + 1} con ${escala.AerolineaID}</b>: Partida: ${formatoFechaMostrar(escala.FechaSalida)} desde ${escala.AeropuertoOrigenID} a las ${formatoFechaSinFechaMostrar(escala.FechaSalida)}hs.  - Arrivo: ${formatoFechaMostrar(escala.FechaLlegada)} - a ${escala.AeropuertoDestinoID} a las ${formatoFechaSinFechaMostrar(escala.FechaLlegada)}hs. - <b>Vuelo Nro</b>: ${escala.AerolineaID}${escala.NumeroVuelo}  </li>
                        `

                        escalas.push(escala);
                    }
                }
                reservaVuelo.Escalas = escalas;

                //Creo los acompañantes del vuelo seleccionado para agregarlas al objeto que paso al controlador.
                var acompaniantes = [];
                var pasajerosHTMLPDF = ``;
                for(var i = 1; i <= modeloVuelo.pasajeros; i++)
                {   
                    var acompaniante = {
                        NombreCompleto : document.getElementById('nombreCompleto_' + i).value,
                        Apellido: document.getElementById('apellido_' + i).value,
                        Pais: document.getElementById('selectPaises_' + i).value,
                        FechaNacimiento: document.getElementById('fechaNacimiento_' + i).value,
                        TipoDocumento: document.getElementById('tipoDocumento_' + i).value,
                        NroDocumento: document.getElementById('nroDocumento_' + i).value,
                        Genero: document.querySelector('input[name="Pasajeros[' + i + '].Genero"]:checked').value
                    };

                    pasajerosHTMLPDF += `
                        <div class="detallePasajerosPDF">
                            <p>Pasajero ${i}:</p>
                            <p>${acompaniante.NombreCompleto} ${acompaniante.Apellido}.</p>
                            <p>Nacionalidad: ${acompaniante.Pais}.</p>
                            <p>Fecha de Nacimiento: ${acompaniante.FechaNacimiento}.</p>
                            <p>Documento de Viaje: ${acompaniante.TipoDocumento} ${acompaniante.NroDocumento}.</p>
                            <p>Género: ${acompaniante.Genero}.</p>
                        </div>
                    `

                    acompaniantes.push(acompaniante);
                }


                //Agrego el HTML del PDF de la reserva
                document.getElementById('nroVoucherPDF').innerText = reservaVuelo.NroVoucher;
                document.getElementById('emailPDF').innerText = document.getElementById('email').value;           
                document.getElementById('escalasIdaPDF').innerHTML = escalasIdaHTMLPDF;
                if(modeloVuelo.escalasVuelta.length > 0){
                    document.getElementById('escalasVueltaPDF').innerHTML = escalasVueltaHTMLPDF;
                }
                document.getElementById('pasajerosPDF').innerHTML = pasajerosHTMLPDF;
                document.getElementById('pagoPDF').innerHTML = `
                    <p>Tarjeta de ${reservaVuelo.MedioDePago} en un solo pago. <b>MONTO ABONADO</b>: $${reservaVuelo.MontoTotalCompra}</p>
                `;

                //Paso el objeto generado al controlador para proceder a almacenar la reserva, escalas y acompaniantes en la base de datos.
                $.ajax({
                    url: appUrl + 'ReservaVuelo/GuardarNuevaReserva',
                    data: { ReservaVuelo: reservaVuelo, Acompaniantes: acompaniantes },
                    type: 'POST',
                    dataType: 'json',
                    success: function(result){

                        if(!result.success)
                        {
                            Swal.fire({
                                title: 'Ups, existe un inconveniente:',
                                text: result.message,
                                icon: 'warning',
                                confirmButtonText: 'Volver a intentarlo'
                            });
                        }else
                        {
                            Swal.fire({
                                title: 'Compra realizada exitosamente.',
                                text: '¡Felicitaciones, has reservado tu vuelo con éxito!',
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonText: 'Descargar Voucher',
                                cancelButtonText: 'Salir'
                            }).then((result) => {
                                if(result.isConfirmed){

                                    document.getElementById('contenidoReserva').style.display = 'none';
                                    document.getElementById('compraFinalizada').style.display = 'flex';

                                    generarVoucher().then();

                                }else{
                                    document.getElementById('contenidoReserva').style.display = 'none';
                                    document.getElementById('compraFinalizada').style.display = 'flex';
                                }
                            })
                        }
                    },
                    error: function(kxr, status){
                        Swal.fire({
                            title: 'Ups, existe un inconveniente:',
                            text: 'Ocurrió un error para proceder a reservar el vuelo. Por favor, intente más tarde.',
                            icon: 'warning',
                            confirmButtonText: 'Volver a intentarlo'
                        });
                    }
            })
        })

        function generarVoucher() {
            return new Promise((resolve, reject) => {
                var { jsPDF } = window.jspdf;
                var doc = new jsPDF({
                    orientation: 'portrait',
                    unit: 'mm',
                    format: 'a4'
                });

                var element = document.getElementById('voucherPDF');

                // Mostrar el div temporalmente para asegurar que html2canvas lo captura correctamente
                element.style.display = 'block';

                html2canvas(element, {
                    scale: 2  // Aumenta la escala para mejorar la calidad
                }).then(function(canvas) {
                    var imgData = canvas.toDataURL('image/png');

                    // Calcular las dimensiones de la imagen
                    var imgWidth = 210; // Ancho de A4 en mm
                    var pageHeight = 297; // Alto de A4 en mm
                    var imgHeight = canvas.height * imgWidth / canvas.width;
                    var heightLeft = imgHeight;

                    var position = 0;

                    // Añadir la imagen al documento
                    doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;

                    // Si la imagen es más alta que una página, agrega otra página
                    while (heightLeft >= 0) {
                        position = heightLeft - imgHeight;
                        doc.addPage();
                        doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                        heightLeft -= pageHeight;
                    }

                    doc.save('VoucherReserva.pdf');

                    // Ocultar el div nuevamente
                    element.style.display = 'none';

                    resolve();

                }).catch(function(error) {
                    console.error('Error al generar el canvas:', error);
                    reject(error);
                });
            });
        }

        function volverInicio(){
            window.open('/', '_blank');
            window.close();
        }

        function formatoFechaMostrar(stringFecha) {
            const fecha = new Date(stringFecha);
            const dia = String(fecha.getDate()).padStart(2, '0');
            const mes = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'][fecha.getMonth()];
            const anio = fecha.getFullYear();

            return `${dia} ${mes}. ${anio}`;
        }


        function formatoFechaSinFechaMostrar(stringFecha) {

            const fecha = new Date(stringFecha);
            const horas = String(fecha.getHours()).padStart(2, '0');
            const minutos = String(fecha.getMinutes()).padStart(2, '0');

            return `${horas}:${minutos}`;
        }

    </script>
}
